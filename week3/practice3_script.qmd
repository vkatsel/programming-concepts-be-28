---
title: "Практична №3 - Логічні оператори"
affiliation: "Основи програмування"
date: "10-27-2025"
date-format: "YYYY-MM-DD"
toc: true
lang: ua
format: 
  html:
    theme:
      light: cosmo
      dark: darkly
execute:
  eval: false
---

# Вступна частина

-   Мета:
    -   Перестати писати код, який виконується лише згори донизу.
    -   Навчити студентів змушувати програму "приймати рішення" (if) та "повторювати дії" (while, for), щоб вирішувати складні, інтерактивні задачі.
-   План заняття: Ми почнемо з if і напишемо калькулятор індексу маси тіла. Потім ми візьмемо цикли, напишемо гру-вгадайку та відомий "FizzBuzz". А в кінці зберемо все це до купи, щоб ви могли зробити свій перший крутий проєкт — симулятор банкомату.

# Блок 1: Прийняття Рішень (if/elif/else)

Аналогія: Використовуй свою аналогію з трамваєм. "Досі наш код був як трамвай на рейках. Їхав згори донизу. Сьогодні ми додаємо 'стрілки' та 'розгалуження'".

## Загальна теорія

-   if — це перевірка умови, яка завжди повертає True (правда) або False (неправда)

-   Ключові логічні оператори:
  - == (рівність) vs = (присвоєння)
  - != 
  - \<, \>, \<=, \>=

-   Синтаксис:

```{python}
if умова_1:
    # код, який виконується, якщо умова_1 істинна
elif умова_2:
    # код, який виконується, якщо умова_2 істинна
else:
    # код, який виконується, якщо жодна з умов не істинна
```

## Live coding

::: callout-note
# Задача: Індекс маси тіла (BMI) за зростом та вагою
:::

- Крок 1: отримуємо дані

```{python}
print("--- Калькулятор ІМТ ---")
height_str = input("Введіть ваш зріст (у метрах, напр. 1.75): ")
weight_str = input("Введіть вашу вагу (у кг): ")

height = float(height_str)
weight = float(weight_str)
```

- Крок 2: розрахунки

```{python}
bmi = weight / (height ** 2)

# Використовуємо f-string форматування, щоб округлити до 2 знаків
print(f"Ваш ІМТ: {round(bmi, 2)}")
```

- Крок 3: прийняття рішень

```{python}

if bmi < 18.5:
    print("Статус: Недостатня вага.")
elif bmi >= 18.5 and bmi < 25:
    print("Статус: Нормальна вага. Вітаємо!")
elif bmi >= 25 and bmi < 30:
    print("Статус: Зайва вага.")
else: # Все, що >= 30
    print("Статус: Ожиріння.")

print("Аналіз завершено. Будьте здорові!")

```

- Крок 4: валідація

```{python}

height = float(input("Зріст (м): "))
weight = float(input("Вага (кг): "))

# Нова, "захисна" логіка
if height <= 0 or weight <= 0:
    print("Помилка: Зріст та вага мають бути додатніми числами.")
else:
    # Вся наша попередня логіка (BMI) тепер іде сюди,
    # з ДОДАТКОВИМ ВІДСТУПОМ.
    bmi = weight / (height ** 2)
    print(f"Ваш ІМТ: {bmi:.2f}")

    if bmi < 18.5:
        print("Статус: Недостатня вага.")
    elif bmi < 25: # Вже не треба "and bmi >= 18.5", бо це само собою зрозуміло
        print("Статус: Нормальна вага.")
    elif bmi < 30:
        print("Статус: Зайва вага.")
    else:
        print("Статус: Ожиріння.")
```


# Блок 2: "Складні Рішення" (and, or, not)

## Теорія
Логічні оператори:
  -   and — обидві умови мають бути істинними
  -   or — хоча б одна умова має бути істинною
  -   not — заперечення умови
  
## Live coding
:::callout-note
# Задача: Перевірка доступу з складними вимогами
Нам потрібно перевірити квиток на потяг. Умови наступні: 
- Особа має мати квиток
- Якщо їй менше 18 років, вона повинна бути в супроводі дорослого
- Якщо квитка немає, доступ заборонено
:::

```{python}

age = int(input("Ваш вік: "))
has_ticket = input("Чи є у вас квиток? (yes/no): ")

if age >= 18 and has_ticket == 'yes':
    print("Доступ дозволено. Ласкаво просимо.")
elif age < 18 and has_ticket == 'yes':
    print("Доступ дозволено, але тільки з дорослим.")
elif has_ticket == 'no':
    print("Доступ заборонено. Потрібен квиток.")
else:
    print("Щось пішло не так.")

```

# Блок 3: завдання на оцінку та Q&A
    

